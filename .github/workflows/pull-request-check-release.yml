name: Pull Request Check Release

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - Acceptance
      - Production
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'oracle'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        run: mvn -B test --file pom.xml

  create-jar:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'oracle'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Jar
        run: mvn package

      - name: Build Package
        run: mkdir staging && cp target/*.jar staging

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: staging
  
  create_release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ secrets.VERSION }}
          release_name: Release v${{ secrets.VERSION }}
          body: |
            Release v${{ secrets.VERSION }}
          draft: false
          prerelease: false
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'oracle'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Jar
        run: mvn package

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/JabberPoint-***.jar
          asset_name: JabberPoint-${{ secrets.VERSION }}.jar
          asset_content_type: application/java-archive

  write-comment-on-unit-test-failure:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: unit-test
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write comment
        uses: mshick/add-pr-comment@v2
        with:
          message: 'There were errors during the unit test process.'

  write-comment-on-create-jar-failure:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: create-jar
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write comment
        uses: mshick/add-pr-comment@v2
        with:
          message: 'There were errors during the creating jar process.'
