name: Pull Request Check Release

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - Acceptance
      - Production
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'oracle'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        run: mvn -B test --file pom.xml

  create-jar:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'oracle'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Jar
        run: mvn package

      - name: Build Package
        run: mkdir staging && cp target/*.jar staging

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: staging
  
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install @octokit/rest

      - name: Check for Existing Release (Optional)
        uses: actions/github-script@v7
        with:
          script: |
            const octokit = require('@octokit/rest');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag_name = `v${{ secrets.VERSION }}`;

            const octo = new octokit({ auth: process.env.GITHUB_TOKEN });

            try {
              const release = await octo.repos.getReleaseByTag({
                owner,
                repo,
                tag_name
              });
              if (release.data) {
                console.log('Release already exists for tag v${{ secrets.VERSION }}');
                core.setOutput('release_exists', true);
              } else {
                core.setOutput('release_exists', false);
              }
            } catch (error) {
              console.log('No release found for tag v${{ secrets.VERSION }}');
              core.setOutput('release_exists', false);
            }

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ secrets.VERSION }}',
              sha: context.sha
            })

      - name: Add files to Tag
        uses: softprops/action-gh-release@v2
        with:
          files: 'staging/*.jar'
          tag_name: v${{ secrets.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release (Only if release doesn't exist)
        id: create_release
        if: steps.check_release.outputs.release_exists == 'false'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ secrets.VERSION }}
          release_name: Release v${{ secrets.VERSION }}
          body: |
            Release v${{ secrets.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./staging/*.jar
          asset_name: JabberPoint-${{ secrets.VERSION }}.jar
          asset_content_type: application/java-archive

  write-comment-on-unit-test-failure:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: unit-test
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write comment
        uses: mshick/add-pr-comment@v2
        with:
          message: 'There were errors during the unit test process.'

  write-comment-on-create-jar-failure:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: create-jar
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write comment
        uses: mshick/add-pr-comment@v2
        with:
          message: 'There were errors during the creating jar process.'
